int spanningTree(int V, vector<vector<int>> adj[])
    {
      priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> pq;
       pq.push({0,0});
       vector<bool> inMST(V,false);
       int sum=0;
       while(!pq.empty()){
           auto p=pq.top();
           pq.pop();
           int wt=p.first;
           int node=p.second;
           if(inMST[node]==true)continue;
           inMST[node]=true;
           sum+=wt;
           for(auto &tmp:adj[node]){
               int neighbour=tmp[0];
               int neighbour_wt=tmp[1];
               if(inMST[neighbour]==false){
                   pq.push({neighbour_wt,neighbour});
               }
               
               
           }
           
           
           
           
       }
      return sum;
